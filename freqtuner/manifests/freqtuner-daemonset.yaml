apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: freqtuner
  namespace: ${NAMESPACE}
  labels:
    app: freqtuner
spec:
  selector:
    matchLabels:
      app: freqtuner
  template:
    metadata:
      labels:
        app: freqtuner
      annotations:
        nvidia.com/gpu-driver-capabilities: "compute,utility,compat32"
    spec:
      serviceAccountName: freqtuner
      nodeSelector:
        nvidia.com/gpu: "true"
      containers:
      - name: manager
        image: ${IMAGE_REGISTRY}/freqtuner:${IMAGE_TAG}
        imagePullPolicy: Always
        args:
        - --metrics-bind-address=:8080
        - --health-probe-bind-address=:8081
        securityContext:
          privileged: true
          runAsUser: 0
          capabilities:
            add:
              - ALL
          allowPrivilegeEscalation: true
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NVIDIA_VISIBLE_DEVICES
          value: "all"
        - name: NVIDIA_DRIVER_CAPABILITIES
          value: "compute,utility,video"
        - name: NVIDIA_REQUIRE_CUDA
          value: "cuda>=11.0"
        - name: NVIDIA_MIG_CONFIG_DEVICES
          value: "all"
        volumeMounts:
        - name: nvidia-smi
          mountPath: /usr/bin/nvidia-smi
        - name: nvidia-libs
          mountPath: /usr/lib/x86_64-linux-gnu/libnvidia-ml.so.1
        - name: nvidia-devices
          mountPath: /dev
        - name: nvidia-caps
          mountPath: /dev/nvidia-caps
        resources:
          limits:
            cpu: 200m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 200Mi
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        - containerPort: 8081
          name: health
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: health
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: health
          initialDelaySeconds: 5
          periodSeconds: 10
      initContainers:
      - name: gpu-init
        image: nvidia/cuda:12.0.0-base-ubuntu22.04
        command: ["/bin/sh"]
        args:
        - -c
        - |
          nvidia-smi -pm 1 || true
          nvidia-smi --query-gpu=gpu_name,gpu_uuid,compute_mode,persistence_mode --format=csv
          nvidia-smi --query-gpu=clocks.applications --format=csv || true
          chmod 666 /dev/nvidia* || true
          ls -l /dev/nvidia* || true
        securityContext:
          privileged: true
      volumes:
      - name: nvidia-smi
        hostPath:
          path: /usr/bin/nvidia-smi
      - name: nvidia-libs
        hostPath:
          path: /usr/lib/x86_64-linux-gnu/libnvidia-ml.so.1
      - name: nvidia-devices
        hostPath:
          path: /dev
      - name: nvidia-caps
        hostPath:
          path: /dev/nvidia-caps
      - name: nvidia-uvm
        hostPath:
          path: /dev/nvidia-uvm
      - name: nvidia-uvm-tools
        hostPath:
          path: /dev/nvidia-uvm-tools
      - name: nvidiactl
        hostPath:
          path: /dev/nvidiactl
      - name: nvidia-modeset
        hostPath:
          path: /dev/nvidia-modeset
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule